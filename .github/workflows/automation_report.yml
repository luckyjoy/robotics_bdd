name: Robotics BDD Simulation CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 7 * * *'

jobs:
  run-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-11]

    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - run: pip install pytest pytest-bdd allure-pytest pytest-html

      - name: Run tests and generate Allure Results (Linux)
        if: runner.os == 'Linux'
        run: |
          rm -rf allure-results
          pytest -m navigation --alluredir=allure-results | tee pytest.log

      - name: Run tests and generate Allure Results (Windows)
        if: runner.os == 'Windows'
        run: |
          Remove-Item -Recurse -Force allure-results
          pytest -m navigation --alluredir=allure-results

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-${{ matrix.os }}
          path: allure-results

  deploy-pages:
    runs-on: ubuntu-latest
    needs: run-tests

    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Download artifacts from all matrix runs
      - name: Download Linux Allure Results
        uses: actions/download-artifact@v4
        with:
          name: allure-results-ubuntu-latest
          path: allure-results/ubuntu

      - name: Download Windows Allure Results
        uses: actions/download-artifact@v4
        with:
          name: allure-results-windows-11
          path: allure-results/windows

      # Merge Allure results
      - name: Merge Allure Results
        run: |
          mkdir -p allure-results
          cp -r allure-results/ubuntu/* allure-results/
          cp -r allure-results/windows/* allure-results/

      # Download Allure CLI
      - name: Setup Allure CLI
        run: |
          ALLURE_VERSION=2.25.0
          curl -L -o allure.tgz "https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/${ALLURE_VERSION}/allure-commandline-${ALLURE_VERSION}.tgz"
          mkdir -p allure-commandline
          tar -xzf allure.tgz -C allure-commandline --strip-components 1
          export PATH="$PWD/allure-commandline/bin:$PATH"

      # Generate report
      - run: |
          BUILD_NUMBER=${GITHUB_RUN_NUMBER}
          SITE_DIR="site"
          VERSIONED_REPORT_DIR="allure-report-${BUILD_NUMBER}"
          mkdir -p $VERSIONED_REPORT_DIR
          allure generate allure-results --output $VERSIONED_REPORT_DIR --clean

          mkdir -p "$SITE_DIR/$BUILD_NUMBER"
          cp -r "$VERSIONED_REPORT_DIR"/* "$SITE_DIR/$BUILD_NUMBER/"
          mkdir -p "$SITE_DIR/latest"
          cp -r "$VERSIONED_REPORT_DIR"/* "$SITE_DIR/latest/"

          date -u +"%Y-%m-%d %H:%M:%S UTC" > "$SITE_DIR/$BUILD_NUMBER/build-info.txt"

      # Deploy GitHub Pages
      - uses: actions/configure-pages@v5
      - uses: actions/upload-pages-artifact@v3
        with:
          path: site
      - uses: actions/deploy-pages@v4

      # Add badges to workflow summary
      - run: |
          REPO_NAME=${GITHUB_REPOSITORY##*/}
          LATEST="https://${GITHUB_REPOSITORY_OWNER}.github.io/${REPO_NAME}/latest/"
          HISTORICAL="https://${GITHUB_REPOSITORY_OWNER}.github.io/${REPO_NAME}/"

          echo "### Robotics BDD Simulation CI/CD" >> $GITHUB_STEP_SUMMARY
          echo "[![Latest Report](https://img.shields.io/badge/Latest-Report-blue)]($LATEST)" >> $GITHUB_STEP_SUMMARY
          echo "[![Historical Reports](https://img.shields.io/badge/Historical-Reports-green)]($HISTORICAL)" >> $GITHUB_STEP_SUMMARY
