name: Robotics BDD Simulation CI/CD

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install allure-pytest

      - name: Run tests with Allure
        run: |
          pytest --alluredir=allure-results

      - name: Generate Allure Report
        run: |
          allure generate allure-results -o allure-report --clean

      - name: Save build metadata
        run: |
          mkdir -p allure-report
          echo "Build: $GITHUB_RUN_NUMBER" > allure-report/build-info.txt
          echo "Date: $(date)" >> allure-report/build-info.txt

      - name: Upload report artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-${{ matrix.os }}
          path: allure-report

  deploy-pages:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download Ubuntu report
        uses: actions/download-artifact@v4
        with:
          name: allure-report-ubuntu-latest
          path: site/${{ github.run_number }}/ubuntu-latest

      - name: Download Windows report
        uses: actions/download-artifact@v4
        with:
          name: allure-report-windows-latest
          path: site/${{ github.run_number }}/windows-latest

      - name: Copy to latest folder
        run: |
          mkdir -p site/latest
          cp -r site/${{ github.run_number }}/ubuntu-latest site/latest/ubuntu-latest
          cp -r site/${{ github.run_number }}/windows-latest site/latest/windows-latest

      # -----------------------------
      # Build index.html + history.html
      # -----------------------------
      - name: Build Index and History
        run: |
          SITE_DIR="site"
          mkdir -p "$SITE_DIR"

          # Index page
          echo "<html><body><h1>Robotics BDD Simulation CI/CD</h1><ul>" > "$SITE_DIR/index.html"
          for OS in ubuntu-latest windows-latest; do
            if [ -d "$SITE_DIR/latest/$OS" ]; then
              TS=$(cat "$SITE_DIR/latest/$OS/build-info.txt" 2>/dev/null || echo "(no timestamp)")
              echo "<li><a href='latest/$OS/'>Latest Report ($OS)</a> - ${TS}</li>" >> "$SITE_DIR/index.html"
            fi
          done
          echo "<li><a href='history.html'>Report History - All previous builds</a></li>" >> "$SITE_DIR/index.html"
          echo "</ul></body></html>" >> "$SITE_DIR/index.html"

          # History page
          echo "<html><body><h1>All Build Reports</h1>" > "$SITE_DIR/history.html"

          for OS in ubuntu-latest windows-latest; do
            echo "<h2>${OS}</h2><ul>" >> "$SITE_DIR/history.html"
            for dir in $(ls -1v $SITE_DIR | grep -E '^[0-9]+$' | sort -nr); do
              if [ -d "$SITE_DIR/$dir/$OS" ]; then
                TS=$(cat "$SITE_DIR/$dir/$OS/build-info.txt" 2>/dev/null || echo "(no timestamp)")
                echo "<li><a href='${dir}/${OS}/'>Build #${dir}</a> - ${TS}</li>" >> "$SITE_DIR/history.html"
              fi
            done
            echo "</ul>" >> "$SITE_DIR/history.html"
          done

          echo "</body></html>" >> "$SITE_DIR/history.html"

      # -----------------------------
      # Upload pages
      # -----------------------------
      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      # -----------------------------
      # Add badges in summary
      # -----------------------------
      - name: Add Workflow Badges
        run: |
          REPO_NAME=${GITHUB_REPOSITORY##*/}
          BASE_URL="https://${GITHUB_REPOSITORY_OWNER}.github.io/${REPO_NAME}"

          UBUNTU_LATEST="${BASE_URL}/latest/ubuntu-latest/"
          WINDOWS_LATEST="${BASE_URL}/latest/windows-latest/"
          HISTORY="${BASE_URL}/history.html"

          echo "### Robotics BDD Simulation CI/CD" >> $GITHUB_STEP_SUMMARY
          echo "[![Ubuntu Latest Report](https://img.shields.io/badge/Ubuntu-Latest_Report-blue)]($UBUNTU_LATEST)" >> $GITHUB_STEP_SUMMARY
          echo "[![Windows Latest Report](https://img.shields.io/badge/Windows-Latest_Report-blue)]($WINDOWS_LATEST)" >> $GITHUB_STEP_SUMMARY
          echo "[![Report History](https://img.shields.io/badge/Report-History-green)]($HISTORY)" >> $GITHUB_STEP_SUMMARY
