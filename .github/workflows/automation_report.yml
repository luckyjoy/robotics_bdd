name: Robotics BDD Simulation CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 7 * * *'

jobs:
  run-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    timeout-minutes: 30

    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          echo "Installing Python dependencies..."
          pip install pytest pytest-bdd allure-pytest pytest-html

      - name: Debug runner info
        run: |
          echo "RUNNER_OS=${RUNNER_OS}"
          python --version
          pip list

      - name: Clean previous results
        run: |
          echo "Cleaning allure-results folder..."
          if [ -d "allure-results" ]; then rm -rf allure-results; fi

      - name: Copy support files per OS
        run: |
          echo "Copying support files for $RUNNER_OS..."
          mkdir -p allure-results
          if [ "$RUNNER_OS" == "Linux" ] || [ "$RUNNER_OS" == "macOS" ]; then
            cp supports/ubuntu.* allure-results/ || true
          elif [ "$RUNNER_OS" == "Windows" ]; then
            cp supports/windows.* allure-results/ || true
          fi
          ls -la allure-results

      - name: Run tests
        run: |
          echo "Running tests for $RUNNER_OS..."
          pytest -m navigation --alluredir=allure-results | tee pytest.log

      - name: Upload Allure Results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-${{ matrix.os }}
          path: allure-results
          retention-days: 7

  deploy-pages:
    runs-on: ubuntu-latest
    needs: run-tests
    timeout-minutes: 30
    environment:
      name: github-pages

    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download previous artifacts
        run: |
          echo "Downloading previous Allure results..."
        # Download Linux artifact
      - uses: actions/download-artifact@v4
        with:
          name: allure-results-ubuntu-latest
          path: site/ubuntu-latest
      - uses: actions/download-artifact@v4
        with:
          name: allure-results-windows-latest
          path: site/windows-latest

      - name: Setup Allure CLI
        run: |
          echo "Setting up Allure CLI..."
          ALLURE_VERSION=2.25.0
          curl -L -o allure.tgz "https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/${ALLURE_VERSION}/allure-commandline-${ALLURE_VERSION}.tgz"
          mkdir -p allure-commandline
          tar -xzf allure.tgz -C allure-commandline --strip-components 1
          echo "$PWD/allure-commandline/bin" >> $GITHUB_PATH
          allure --version

      - name: Generate Allure Reports
        run: |
          echo "Generating Allure Reports..."
          BUILD_NUMBER=${GITHUB_RUN_NUMBER}
          SITE_DIR="site"
          mkdir -p "$SITE_DIR/$BUILD_NUMBER"
          mkdir -p "$SITE_DIR/latest"

          for OS in ubuntu-latest windows-latest; do
            echo "Generating report for $OS..."
            VERSIONED_REPORT_DIR="allure-report-${BUILD_NUMBER}-${OS}"
            mkdir -p "$VERSIONED_REPORT_DIR"
            allure generate "site/$OS" --output "$VERSIONED_REPORT_DIR" --clean
            mkdir -p "$SITE_DIR/$BUILD_NUMBER/$OS"
            cp -r "$VERSIONED_REPORT_DIR"/* "$SITE_DIR/$BUILD_NUMBER/$OS/"
            mkdir -p "$SITE_DIR/latest/$OS"
            cp -r "$VERSIONED_REPORT_DIR"/* "$SITE_DIR/latest/$OS/"
            date -u +"%Y-%m-%d %H:%M:%S UTC" > "$SITE_DIR/$BUILD_NUMBER/$OS/build-info.txt"
            cp "$SITE_DIR/$BUILD_NUMBER/$OS/build-info.txt" "$SITE_DIR/latest/$OS/build-info.txt"
          done

      - name: Rebuild index.html
        run: |
          echo "Rebuilding index.html..."
          SITE_DIR="site"
          echo "<html><body><h1>Allure Reports</h1><ul>" > "$SITE_DIR/index.html"

          # Latest reports
          for OS in ubuntu-latest windows-latest; do
            if [ -d "$SITE_DIR/latest/$OS" ]; then
              TS=$(cat "$SITE_DIR/latest/$OS/build-info.txt" 2>/dev/null || echo "(no timestamp)")
              echo "<li><a href='latest/$OS/'>Latest Report ($OS)</a> - ${TS}</li>" >> "$SITE_DIR/index.html"
            fi
          done

          # Historical builds
          for dir in $(ls -1v $SITE_DIR | grep -E '^[0-9]+$' | sort -nr); do
            for OS in ubuntu-latest windows-latest; do
              if [ -d "$SITE_DIR/$dir/$OS" ]; then
                TS=$(cat "$SITE_DIR/$dir/$OS/build-info.txt" 2>/dev/null || echo "(no timestamp)")
                echo "<li><a href='${dir}/${OS}/'>Build #${dir} ($OS)</a> - ${TS}</li>" >> "$SITE_DIR/index.html"
              fi
            done
          done

          echo "</ul></body></html>" >> "$SITE_DIR/index.html"
          echo "Index.html contents:"
          cat "$SITE_DIR/index.html"

      - uses: actions/configure-pages@v5
      - uses: actions/upload-pages-artifact@v3
        with:
          path: site
      - uses: actions/deploy-pages@v4

      - name: Add workflow summary badges
        run: |
          echo "Adding workflow summary badges..."
          REPO_NAME=${GITHUB_REPOSITORY##*/}
          LATEST="https://${GITHUB_REPOSITORY_OWNER}.github.io/${REPO_NAME}/latest/"
          HISTORICAL="https://${GITHUB_REPOSITORY_OWNER}.github.io/${REPO_NAME}/"

          echo "### Robotics BDD Simulation CI/CD" >> $GITHUB_STEP_SUMMARY
          echo "[![Ubuntu Latest Report](https://img.shields.io/badge/Ubuntu-Latest-blue)](${LATEST}ubuntu-latest/)" >> $GITHUB_STEP_SUMMARY
          echo "[![Windows Latest Report](https://img.shields.io/badge/Windows-Latest-blue)](${LATEST}windows-latest/)" >> $GITHUB_STEP_SUMMARY
          echo "[![Report History](https://img.shields.io/badge/History-All-green)](${HISTORICAL})" >> $GITHUB_STEP_SUMMARY
