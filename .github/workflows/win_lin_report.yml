name: Robotics BDD Simulation CI/CD

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  ALLURE_VERSION: 2.29.0
  SITE_DIR: site
  RESULTS_DIR: allure-results

jobs:
  test:
    name: Run Tests on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-bdd allure-pytest

      - name: Run Tests
        run: |
          pytest --alluredir=${{ env.RESULTS_DIR }}

      - name: Upload Allure Results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-${{ matrix.os }}
          path: ${{ env.RESULTS_DIR }}

  report:
    name: Generate Allure Reports and Deploy
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # ✅ FIX (3): Use artifact restore via run-name instead of workflow
      - name: Restore Previous Allure Site (for Trend + History)
        uses: actions/download-artifact@v4
        with:
          name: allure-history
          path: previous_site
        continue-on-error: true

      - name: Merge Previous Site into Current Build
        run: |
          SITE_DIR="${{ env.SITE_DIR }}"
          mkdir -p "$SITE_DIR"
          if [ -d "previous_site" ]; then
            echo "🗂️ Restoring previous site for trend & build history..."
            cp -r previous_site/* "$SITE_DIR/" || true
          else
            echo "⚠️ No previous site found (first run or artifact expired)."
          fi

      - name: Download Allure CLI
        run: |
          wget https://github.com/allure-framework/allure2/releases/download/${{ env.ALLURE_VERSION }}/allure-${{ env.ALLURE_VERSION }}.tgz
          tar -xzf allure-${{ env.ALLURE_VERSION }}.tgz
          mv allure-${{ env.ALLURE_VERSION }} allure-commandline
          echo "$(pwd)/allure-commandline/bin" >> $GITHUB_PATH

      - name: Download Allure Artifacts
        uses: actions/download-artifact@v4
        with:
          path: allure-results

      - name: Generate Allure Reports (Per OS)
        run: |
          SITE_DIR="${{ env.SITE_DIR }}"
          mkdir -p "$SITE_DIR"

          for OS in ubuntu-latest windows-latest; do
            RESULTS_DIR="allure-results/allure-results-${OS}"
            REPORT_DIR="$SITE_DIR/${{ github.run_number }}/${OS}"
            LATEST_DIR="$SITE_DIR/latest/${OS}"
            mkdir -p "$REPORT_DIR"

            echo "🔧 Merging previous history for $OS..."
            if [ -d "$LATEST_DIR/history" ]; then
              mkdir -p "$RESULTS_DIR/history"
              cp -r "$LATEST_DIR/history"/* "$RESULTS_DIR/history/" || true
            fi

            echo "📊 Generating Allure report for $OS..."
            allure generate "$RESULTS_DIR" -o "$REPORT_DIR" --clean

            echo "🔄 Updating latest link for $OS..."
            rm -rf "$LATEST_DIR"
            mkdir -p "$(dirname "$LATEST_DIR")"
            cp -r "$REPORT_DIR" "$LATEST_DIR"
          done

      - name: Fix Allure Internal Paths
        run: |
          find ${{ env.SITE_DIR }} -type f -name "*.html" -exec sed -i 's|../latest/|latest/|g' {} +

      - name: Rebuild index.html with History and PDT timestamps
        run: |
          SITE_DIR="${{ env.SITE_DIR }}"
          INDEX_FILE="$SITE_DIR/index.html"
          echo "<html><head><meta charset='UTF-8'><title>🤖 Robotics BDD Simulation CI/CD Build History</title></head><body>" > "$INDEX_FILE"
          echo "<h1>🤖 Robotics BDD Simulation CI/CD Build History</h1>" >> "$INDEX_FILE"
          echo "<h2>🧩 Latest Allure Reports</h2>" >> "$INDEX_FILE"

          for OS in ubuntu-latest windows-latest; do
            TIME=$(date +"%a %b %d %T PDT %Y")
            echo "    Latest Report ($OS) - Last run: $TIME --> <a href='latest/$OS/index.html'>Open</a><br>" >> "$INDEX_FILE"
          done

          echo "<h2>📊 Report History</h2>" >> "$INDEX_FILE"
          BUILDS=$(find "$SITE_DIR" -mindepth 1 -maxdepth 1 -type d -printf "%f\n" | grep -E '^[0-9]+$' | sort -nr)
          for B in $BUILDS; do
            for OS in ubuntu-latest windows-latest; do
              if [ -f "$SITE_DIR/$B/$OS/index.html" ]; then
                TIME=$(date +"%a %b %d %T PDT %Y")
                echo "Build #$B ($OS) - $TIME --> <a href='$B/$OS/index.html'>Open</a><br>" >> "$INDEX_FILE"
              fi
            done
          done
          echo "</body></html>" >> "$INDEX_FILE"

      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.SITE_DIR }}

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Upload Allure History Artifact (for Next Build)
        uses: actions/upload-artifact@v4
        with:
          name: allure-history
          path: ${{ env.SITE_DIR }}
          retention-days: 14

      - name: Add Workflow Summary (Badges)
        run: |
          PAGE_URL=${{ steps.deployment.outputs.page_url }}
          BASE_URL="${PAGE_URL%/}"
          echo "### 🤖 Robotics BDD Simulation CI/CD" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "[![Ubuntu Latest Report](https://img.shields.io/badge/Ubuntu-Latest_Build-blue)](${BASE_URL}/latest/ubuntu-latest/index.html)" >> $GITHUB_STEP_SUMMARY
          echo "[![Windows Latest Report](https://img.shields.io/badge/Windows-Latest_Build-blue)](${BASE_URL}/latest/windows-latest/index.html)" >> $GITHUB_STEP_SUMMARY
          echo "[![Report History](https://img.shields.io/badge/All-Builds-green)](${BASE_URL}/)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Build #${GITHUB_RUN_NUMBER} | Status: $STATUS_ICON $STATUS_TEXT" >> $GITHUB_STEP_SUMMARY
