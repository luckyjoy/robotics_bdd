name: Robotics BDD Simulation CI/CD

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-report:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests with Allure
        run: |
          mkdir -p allure-results
          pytest --alluredir=allure-results || true

      - name: Generate Allure Report
        run: |
          mkdir -p site/${{ matrix.os }}
          allure generate allure-results -o site/${{ matrix.os }} --clean
          date '+%Y-%m-%d %H:%M:%S' > site/${{ matrix.os }}/build-info.txt

      - name: Upload Report Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-report
          path: site/${{ matrix.os }}

  merge-reports:
    needs: build-and-report
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Allure Artifacts
        uses: actions/download-artifact@v4
        with:
          path: site

      - name: Move latest reports
        run: |
          mkdir -p site/latest
          for OS in ubuntu-latest windows-latest; do
            if [ -d "site/${OS}-report" ]; then
              mv "site/${OS}-report" "site/latest/${OS}"
            fi
          done

      - name: Save Historical Build
        run: |
          BUILD_ID=$(date +%Y%m%d%H%M%S)
          mkdir -p "site/${BUILD_ID}"
          cp -r site/latest/* "site/${BUILD_ID}/"
          echo "Saved historical build $BUILD_ID"

      - name: Rebuild Index
        shell: bash
        run: |
          set -Eeuo pipefail
          SITE_DIR="site"

          # Start fresh file
          : > "$SITE_DIR/index.html"

          # Header
          printf '%s\n' '<!doctype html>' '<html lang="en">' '<head>' \
            '  <meta charset="utf-8">' \
            '  <title>Allure Reports - Robotics BDD</title>' \
            '  <meta name="viewport" content="width=device-width, initial-scale=1">' \
            '  <style>body{font-family:Inter,system-ui,-apple-system,"Segoe UI",Roboto,Arial,sans-serif;line-height:1.45;margin:24px} a{color:#0a66c2;text-decoration:none} a:hover{text-decoration:underline} ul{margin:0;padding:0;list-style:disc inside} hr{margin:16px 0} .muted{color:#6b7280}</style>' \
            '</head>' '<body>' \
            '  <h1>Robotics BDD Test Reports</h1>' \
            '  <hr>' \
            '  <h2>Latest Reports</h2>' \
            '  <ul>' >> "$SITE_DIR/index.html"

          # Latest links
          for OS in ubuntu-latest windows-latest; do
            if [ -d "$SITE_DIR/latest/$OS" ]; then
              TS=$(cat "$SITE_DIR/latest/$OS/build-info.txt" 2>/dev/null || echo "(no timestamp)")
              printf '  <li><a href="latest/%s/index.html">Latest Report (%s)</a> - Last run: %s</li>\n' "$OS" "$OS" "$TS" >> "$SITE_DIR/index.html"
            fi
          done

          # Historical builds header
          printf '%s\n' '  </ul>' '  <hr>' '  <h2>All Historical Builds</h2>' '  <ul>' >> "$SITE_DIR/index.html"

          # Gather numbered builds and sort
          mapfile -t HIST_BUILDS < <(
            find "$SITE_DIR" -maxdepth 1 -type d -regextype posix-egrep -regex ".*/[0-9]+$" -printf "%f\n" | sort -nr
          )

          if [ "${#HIST_BUILDS[@]}" -eq 0 ]; then
            printf '%s\n' '  <p class="muted">No historical builds found.</p>' >> "$SITE_DIR/index.html"
          else
            for BUILD in "${HIST_BUILDS[@]}"; do
              for OS in ubuntu-latest windows-latest; do
                if [ -d "$SITE_DIR/$BUILD/$OS" ]; then
                  TS=$(cat "$SITE_DIR/$BUILD/$OS/build-info.txt" 2>/dev/null || echo "(no timestamp)")
                  printf '  <li><a href="%s/%s/index.html">Build #%s (%s)</a> - %s</li>\n' "$BUILD" "$OS" "$BUILD" "$OS" "$TS" >> "$SITE_DIR/index.html"
                fi
              done
            done
          fi

          # Close document
          printf '%s\n' '  </ul>' '</body>' '</html>' >> "$SITE_DIR/index.html"

          # Self-check
          echo "---- Generated index.html (link lines) ----"
          grep -n '<li>' "$SITE_DIR/index.html" || echo "No <li> tags found"

      - name: Upload Combined Site
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    needs: merge-reports
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4


      - name: Add workflow badges to summary
        shell: bash
        run: |
          set -Eeuo pipefail
          REPO_NAME="${GITHUB_REPOSITORY##*/}"
          OWNER="${GITHUB_REPOSITORY_OWNER}"
          echo "### Robotics BDD Simulation CI/CD Report Links" >> "$GITHUB_STEP_SUMMARY"
          echo "- Ubuntu Latest Report" >> "$GITHUB_STEP_SUMMARY"
          echo "- Windows Latest Report" >> "$GITHUB_STEP_SUMMARY"
          echo "- Report History" >> "$GITHUB_STEP_SUMMARY"