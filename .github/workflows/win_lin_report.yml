name: Robotics BDD CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  pages: write
  id-token: write

env:
  ALLURE_VERSION: 2.29.0
  SITE_DIR: site
  
jobs:
  run-tests:
    name: Run tests on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    outputs:
      status: ${{ steps.set_status.outputs.result_status }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests with Allure
        id: run-tests
        run: |
          mkdir -p allure-results/${{ matrix.os }}
          pytest tests/ --alluredir=allure-results/${{ matrix.os }} || true

      - name: Determine Status
        id: set_status
        shell: bash
        run: |
          if [ -d "allure-results/${{ matrix.os }}" ]; then
            if grep -q '"failed": [1-9]' allure-results/${{ matrix.os }}/widgets/summary.json 2>/dev/null; then
              echo "result_status=failed" >> $GITHUB_OUTPUT
            else
              echo "result_status=passed" >> $GITHUB_OUTPUT
            fi
          else
            echo "result_status=failed" >> $GITHUB_OUTPUT
          fi

  deploy-allure:
    name: Deploy Allure Report
    runs-on: ubuntu-latest
    needs: run-tests
    env:
      ALLURE_VERSION: 2.29.0
      SITE_DIR: site
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download Allure CLI
        run: |
          wget https://github.com/allure-framework/allure2/releases/download/${ALLURE_VERSION}/allure-${ALLURE_VERSION}.tgz
          tar -xzf allure-${ALLURE_VERSION}.tgz
          sudo mv allure-${ALLURE_VERSION}/bin/allure /usr/local/bin/allure

      - name: Generate Allure Reports (Ubuntu + Windows)
        run: |
          mkdir -p $SITE_DIR/latest
          BUILD_NUMBER=${GITHUB_RUN_NUMBER}
          echo "BUILD_NUMBER=$BUILD_NUMBER" >> $GITHUB_ENV

          for OS in ubuntu-latest windows-latest; do
            if [ -d "allure-results/$OS" ]; then
              allure generate "allure-results/$OS" -o "$SITE_DIR/latest/$OS" --clean
              mkdir -p "$SITE_DIR/$BUILD_NUMBER/$OS"
              cp -r "$SITE_DIR/latest/$OS"/* "$SITE_DIR/$BUILD_NUMBER/$OS/"
              date +"%Y-%m-%d %H:%M:%S %Z" > "$SITE_DIR/$BUILD_NUMBER/$OS/build-info.txt"
              cp "$SITE_DIR/$BUILD_NUMBER/$OS/build-info.txt" "$SITE_DIR/latest/$OS/build-info.txt"
            fi
          done

      - name: Update Executor and Trend Data
        run: |
          for OS in ubuntu-latest windows-latest; do
            if [ -d "$SITE_DIR/latest/$OS" ]; then
              echo '{"buildOrder":'"$GITHUB_RUN_NUMBER"', "reportName":"'"$OS Report"'"}' > "$SITE_DIR/latest/$OS/widgets/executor.json"
              cp -r "$SITE_DIR/latest/$OS/widgets" "$SITE_DIR/widgets" || true
            fi
          done

      - name: Rebuild index.html
        shell: bash
        run: |
          SITE_DIR="site"
          REPO="${GITHUB_REPOSITORY##*/}"
          OWNER="${GITHUB_REPOSITORY_OWNER}"

          echo "<html><head><title>Allure Reports History</title>
          <style>
          body{font-family:sans-serif;margin:20px;}
          ul{list-style:none;padding:0;}
          li{margin:6px 0;}
          a{text-decoration:none;color:#0366d6;}
          a:hover{text-decoration:underline;}
          </style></head><body><h1>Allure Reports History</h1><hr><ul>" > "$SITE_DIR/index.html"

          for OS in ubuntu-latest windows-latest; do
            if [ -d "$SITE_DIR/latest/$OS" ]; then
              TS=$(cat "$SITE_DIR/latest/$OS/build-info.txt" 2>/dev/null || echo "(no timestamp)")
              echo "<li><strong><a href='latest/$OS/'>Latest Report ($OS)</a></strong> - Last run: $TS</li>" >> "$SITE_DIR/index.html"
            fi
          done

          echo "</ul><hr><h2>Historical Builds</h2><ul>" >> "$SITE_DIR/index.html"
          #BUILDS=$(find "$SITE_DIR" -maxdepth 1 -type d -name "[0-9]*" | xargs -n 1 basename | sort -nr)
          BUILDS=$(find "$SITE_DIR" -maxdepth 1 -type d -name "[0-9]*" -printf "%f\n" 2>/dev/null | sort -nr || true)
          for BUILD in $BUILDS; do
            for OS in ubuntu-latest windows-latest; do
              if [ -d "$SITE_DIR/$BUILD/$OS" ]; then
                TS=$(cat "$SITE_DIR/$BUILD/$OS/build-info.txt" 2>/dev/null || echo "(no timestamp)")
                echo "<li><a href='${BUILD}/${OS}/'>Build #${BUILD} ($OS)</a> - ${TS}</li>" >> "$SITE_DIR/index.html"
              fi
            done
          done

          echo "</ul></body></html>" >> "$SITE_DIR/index.html"

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: site
          publish_branch: gh-pages
          commit_message: "Deploy Allure Reports - Build ${{ github.run_number }}"
          
      - name: Add Workflow Summary (Badges)
        run: |
          REPO_NAME=${GITHUB_REPOSITORY##*/}
          OWNER=${GITHUB_REPOSITORY_OWNER}

          echo "### ðŸ¤– Robotics BDD Simulation CI/CD" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "[![Ubuntu Latest Report](https://img.shields.io/badge/Ubuntu-Latest_Build-blue)](https://${OWNER}.github.io/${REPO_NAME}/latest/ubuntu-latest/)" >> $GITHUB_STEP_SUMMARY
          echo "[![Windows Latest Report](https://img.shields.io/badge/Windows-Latest_Build-blue)](https://${OWNER}.github.io/${REPO_NAME}/latest/windows-latest/)" >> $GITHUB_STEP_SUMMARY
          echo "[![Report History](https://img.shields.io/badge/All-Builds-green)](https://${OWNER}.github.io/${REPO_NAME}/)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Build #${GITHUB_RUN_NUMBER} | Status: âœ… All tests passed" >> $GITHUB_STEP_SUMMARY

