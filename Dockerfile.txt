# =============================================================
# GPU Benchmark Suite Dockerfile
# =============================================================
# Author: Bang Thien Nguyen
# Description: Container for running GPU benchmark tests with PyTorch and Allure
# Base image includes CUDA support if available; fallback to CPU
# =============================================================

# ---- Base Image ----
# Using an NVIDIA CUDA image provides necessary drivers and environment for GPU access.
FROM nvidia/cuda:12.2.0-cudnn11.8-runtime-ubuntu22.04

# ---- Set Working Directory ----
WORKDIR /app

# ---- Environment Variables ----
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV LANG=C.UTF-8
ENV LC_ALL=C.UTF-8
ENV PIP_NO_CACHE_DIR=off
ENV PIP_DISABLE_PIP_VERSION_CHECK=on
ENV PIP_DEFAULT_TIMEOUT=100

# ---- System Dependencies ----
RUN apt-get update && apt-get install -y --no-install-recommends \
    # Core Python & Build tools
    python3.10 python3.10-venv python3.10-dev python3-pip \
    curl wget git unzip \
    build-essential cmake pkg-config \
    # Allure dependency (Java)
    default-jre \
    # GUI/display dependencies (e.g., for matplotlib)
    libgl1-mesa-glx libglib2.0-0 \
    && rm -rf /var/lib/apt/lists/*

# ---- Install Allure CLI (Robust Method) ----
# Using curl instead of wget, and ensuring we get the correct version.
# Allure CLI requires Java to be installed (handled above by default-jre)
ENV ALLURE_VERSION 2.27.2
RUN curl -sL https://github.com/allure-framework/allure2/releases/download/${ALLURE_VERSION}/allure-${ALLURE_VERSION}.tgz | tar -xz -C /opt/ && \
    mv /opt/allure-${ALLURE_VERSION} /opt/allure-cli && \
    ln -s /opt/allure-cli/bin/allure /usr/bin/allure

# ---- Python Dependencies ----
# Install all required Python packages
COPY requirements.txt .
RUN python3.10 -m pip install --upgrade pip
RUN python3.10 -m pip install -r requirements.txt

# ---- Copy Application Code ----
# Copy the benchmark and test files into the container
COPY . /app

# ---- Set Default Command ----
# Define the default command to run tests using Python 3.10 and pytest
CMD ["/usr/bin/python3", "-m", "pytest"]
