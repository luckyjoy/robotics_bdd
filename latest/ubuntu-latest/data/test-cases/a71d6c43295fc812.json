{"uid":"a71d6c43295fc812","name":"test_req_wal_03_robot_walks_forward_by_variable_distances[24-29-50-51-20-13-10]","fullName":"steps.walking_steps#test_req_wal_03_robot_walks_forward_by_variable_distances","historyId":"1333fc3367c9c45de90d1e2b45cbbf99","time":{"start":1760311376031,"stop":1760311376033,"duration":2},"description":"/home/runner/work/robotics_bdd/robotics_bdd/features/walking.feature: <REQ_WAL_03> Robot walks forward by variable distances","descriptionHtml":"<p>/home/runner/work/robotics_bdd/robotics_bdd/features/walking.feature: &lt;REQ_WAL_03&gt; Robot walks forward by variable distances</p>\n","status":"failed","statusMessage":"AssertionError: assert (24, 80, 50) == (20, 13, 10)\n  \n  At index 0 diff: 24 != 20\n  \n  Full diff:\n    (\n  -     20,\n  ?      ^\n  +     24,\n  ?      ^\n  -     13,\n  -     10,\n  ?     ^\n  +     80,\n  ?     ^\n  +     50,\n    )","statusTrace":"/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/_pytest/fixtures.py:930: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nsteps/walking_steps.py:54: in check_robot_position\n    assert pos == (x, y, z)\nE   assert (24, 80, 50) == (20, 13, 10)\nE     \nE     At index 0 diff: 24 != 20\nE     \nE     Full diff:\nE       (\nE     -     20,\nE     ?      ^\nE     +     24,\nE     ?      ^\nE     -     13,\nE     -     10,\nE     ?     ^\nE     +     80,\nE     ?     ^\nE     +     50,\nE       )","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"sim","time":{"start":1760311376032,"stop":1760311376032,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"/home/runner/work/robotics_bdd/robotics_bdd/features/walking.feature: <REQ_WAL_03> Robot walks forward by variable distances","status":"failed","statusMessage":"AssertionError: assert (24, 80, 50) == (20, 13, 10)\n  \n  At index 0 diff: 24 != 20\n  \n  Full diff:\n    (\n  -     20,\n  ?      ^\n  +     24,\n  ?      ^\n  -     13,\n  -     10,\n  ?     ^\n  +     80,\n  ?     ^\n  +     50,\n    )","statusTrace":"/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/_pytest/fixtures.py:930: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nsteps/walking_steps.py:54: in check_robot_position\n    assert pos == (x, y, z)\nE   assert (24, 80, 50) == (20, 13, 10)\nE     \nE     At index 0 diff: 24 != 20\nE     \nE     Full diff:\nE       (\nE     -     20,\nE     ?      ^\nE     +     24,\nE     ?      ^\nE     -     13,\nE     -     10,\nE     ?     ^\nE     +     80,\nE     ?     ^\nE     +     50,\nE       )","steps":[{"name":"Given a robot at position [24, 29, 50]","time":{"start":1760311376032,"stop":1760311376032,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When the robot walks forward by 51 units","time":{"start":1760311376032,"stop":1760311376032,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Then the robot should be at position [20, 13, 10]","time":{"start":1760311376033,"stop":1760311376033,"duration":0},"status":"failed","statusMessage":"AssertionError: assert (24, 80, 50) == (20, 13, 10)\n  \n  At index 0 diff: 24 != 20\n  \n  Full diff:\n    (\n  -     20,\n  ?      ^\n  +     24,\n  ?      ^\n  -     13,\n  -     10,\n  ?     ^\n  +     80,\n  ?     ^\n  +     50,\n    )\n","statusTrace":"  File \"/home/runner/work/robotics_bdd/robotics_bdd/steps/walking_steps.py\", line 54, in check_robot_position\n    assert pos == (x, y, z)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"tag","value":"walking"},{"name":"parentSuite","value":"steps"},{"name":"suite","value":"walking_steps"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2259-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"steps.walking_steps"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"_pytest_bdd_example","value":"{'start_x': '24', 'start_y': '29', 'start_z': '50', 'distance': '51', 'end_x': '20', 'end_y': '13', 'end_z': '10'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Core Logic / Navigation Defect","description":"Standard BDD assertion failures where the robot's final position, object status, or movement outcome did not match the expected result defined in the 'Then' steps.","messageRegex":".*(AssertionError|not approximately|less than|greater than|final position).*","matchedStatuses":["failed"],"flaky":false}],"tags":["walking"]},"source":"a71d6c43295fc812.json","parameterValues":["{'start_x': '24', 'start_y': '29', 'start_z': '50', 'distance': '51', 'end_x': '20', 'end_y': '13', 'end_z': '10'}"]}